{"version":3,"sources":["components/Header/styles.ts","components/Header/index.tsx","components/Box/styles.ts","components/Box/index.tsx","components/Board/styles.ts","components/Board/index.tsx","container/Main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["styles","theme","root","flexGrow","menuButton","marginRight","spacing","title","useStyles","makeStyles","ButtonAppBar","classes","className","AppBar","position","Toolbar","Typography","variant","boxStyle","width","height","padding","display","justifyContent","alignItems","border","cursor","flex","rotate","transform","transitionDuration","props","handleClick","name","boxes","onClick","margin","win","color","fontSize","useState","latest","setLatest","setBoxes","winner","setWinner","useEffect","determineWinner","lineMatch","arrBoxes","player1","player2","every","val","box1","box2","box3","box4","box5","box6","box7","box8","box9","topLine","midLine","bottomLine","LeftVertical","midVertical","rightVertical","diagLeft","diagRight","newBoxes","latestValue","Grid","container","direction","item","lg","sm","justify","Button","fullWidth","Main","Container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a61a7bc5.chunk.js","sourcesContent":["import { Theme } from \"@material-ui/core\"\n\nconst styles = (theme: Theme) => ({\n        root: {\n          flexGrow: 1,\n        },\n        menuButton: {\n          marginRight: theme.spacing(2),\n        },\n        title: {\n          flexGrow: 1,\n        },\n})\n\nexport default styles","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport styles from './styles';\n\nconst useStyles = makeStyles(styles);\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Tic Tac Toe\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import { Theme } from \"@material-ui/core\"\n\nconst styles = (theme: Theme) => ({\n        boxStyle: {\n          width: theme.spacing(12),\n          height: theme.spacing(12),\n          padding: 8,\n          display: 'flex',\n          justifyContent: 'space-around',\n          alignItems: 'center',\n          border: '1px solid',\n          cursor: 'pointer',\n          flex: 1\n        },\n        rotate: {\n          transform: 'rotate(-180deg)',\n          transitionDuration: '0.8s'\n        }\n})\n\nexport default styles","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport { Typography } from '@material-ui/core';\n\ninterface Props {\n  name: number;\n  handleClick: (val: number) => void,\n  boxes: any[]\n}\n\nconst useStyles = makeStyles(styles);\n\nexport default function ButtonAppBar(props: Props) {\n  const classes = useStyles();\n  const {handleClick, name, boxes} = props\n\n  const onHandleClick = () => {\n    handleClick(name)\n  }\n\n  return (\n   <div className={classes.boxStyle} onClick={onHandleClick}>\n     <Typography variant=\"h2\" className={boxes[name] && classes.rotate}>{boxes[name]}</Typography>\n   </div>\n  );\n}","import { Theme } from \"@material-ui/core\"\n\nconst styles = (theme: Theme) => ({\n        root: {\n          flexGrow: 1,\n          margin: theme.spacing(3, 0, 3, 0)\n        },\n        win: {\n          color: 'blue',\n          fontSize: 24,\n          transform: 'scaleY(1.2)',\n          transitionDuration: '0.5s'\n        }\n})\n\nexport default styles","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, {useEffect, useState} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '../Box';\nimport { Button, makeStyles, Typography } from '@material-ui/core';\nimport styles from './styles';\n\ninterface Props {\n}\n\nconst useStyles = makeStyles(styles);\n\nexport default function ButtonAppBar(props: Props) {\n  const [latest, setLatest] = useState<boolean>(true)\n  const [boxes, setBoxes] = useState<string[]>([])\n  const [winner, setWinner] = useState<string | boolean>(false)\n  const classes = useStyles()\n\n  useEffect(() => {\n    determineWinner()\n  }, [latest])\n\n  const lineMatch = (arrBoxes: any[], player1: any, player2: any) => {\n    if (arrBoxes.every(val => val === player1)){\n      return player1\n    }\n    if (arrBoxes.every(val => val === player2)){\n      return player2\n    }\n    return false\n  }\n\n  const determineWinner = () => {\n    const [box0, box1,box2,box3,box4,box5,box6,box7,box8,box9] = boxes\n    \n    if (box0) {\n\n    }\n    \n    const topLine = lineMatch([box1,box2,box3], 'X', 'O')\n    if (topLine){\n      setWinner(topLine)\n    }\n\n    const midLine = lineMatch([box4,box5,box6], 'X', 'O')\n    if (midLine){\n      setWinner(midLine)\n    }\n\n    const bottomLine = lineMatch([box7,box8,box9], 'X', 'O')\n    if (bottomLine){\n      setWinner(bottomLine)\n    }\n\n    const LeftVertical = lineMatch([box1,box4,box7], 'X', 'O')\n    if (LeftVertical){\n      setWinner(LeftVertical)\n    }\n\n    const midVertical = lineMatch([box2,box5,box8], 'X', 'O')\n    if (midVertical){\n      setWinner(midVertical)\n    }\n\n    const rightVertical = lineMatch([box3,box6,box9], 'X', 'O')\n    if (rightVertical){\n      setWinner(rightVertical)\n    }\n\n    const diagLeft = lineMatch([box1,box5,box9], 'X', 'O')\n    if (diagLeft){\n      setWinner(diagLeft)\n    }\n\n    const diagRight = lineMatch([box3,box5,box7], 'X', 'O')\n    if (diagRight){\n      setWinner(diagRight)\n    }\n    \n  }\n\n  const handleClick = (name: number) => {\n    \n    const newBoxes: string[] = [...boxes]\n    if (!newBoxes[name] && !winner) {\n      const latestValue = latest ? 'X' : 'O'\n      newBoxes[name] = latestValue\n      setBoxes(newBoxes)\n      setLatest(!latest)\n    }\n  }\n\n  const resetGame = () => {\n    setBoxes([])\n    setWinner(false)\n    setLatest(true)\n  }\n\n  return (\n  <>\n   <Grid container direction=\"column\" className={classes.root}>\n     <Grid item container direction=\"row\" lg={5} sm={12}>\n       <Box boxes={boxes} name={1} handleClick={handleClick}/><Box boxes={boxes} name={2} handleClick={handleClick}/><Box boxes={boxes} name={3} handleClick={handleClick}/>\n     </Grid>\n     <Grid item container direction=\"row\" lg={5} sm={12}>\n     <Box boxes={boxes} name={4} handleClick={handleClick}/><Box boxes={boxes} name={5} handleClick={handleClick}/><Box boxes={boxes} name={6} handleClick={handleClick}/>\n     </Grid>\n     <Grid item container direction=\"row\" lg={5} sm={12}>\n     <Box boxes={boxes} name={7} handleClick={handleClick}/><Box boxes={boxes} name={8} handleClick={handleClick}/><Box boxes={boxes} name={9} handleClick={handleClick}/>\n     </Grid>\n   </Grid>\n   <Typography> Player: {latest ? 'X' : 'O'} </Typography>\n   <Grid container lg={2} sm={12} justify=\"center\">\n    <Typography className={winner ? classes.win : ''}> {winner && `Winner: ${winner}`} </Typography>\n   </Grid>\n   <Grid container lg={2} sm={12}>\n    <Button fullWidth color=\"primary\" variant=\"contained\" onClick={resetGame}> Reset Game </Button>\n   </Grid>\n   </>\n  );\n}","import { Container } from '@material-ui/core'\nimport React from 'react'\nimport Header from '../components/Header'\nimport Board from '../components/Board'\n\nconst Main = () => {\n    return (\n        <>\n        <Header />\n        <Container>\n            <Board />\n        </Container>\n        </>\n    )\n}\n\nexport default Main\n","import React from 'react';\nimport Main from './container/Main'\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}