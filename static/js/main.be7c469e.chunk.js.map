{"version":3,"sources":["components/Header/styles.ts","components/Header/index.tsx","components/Box/styles.ts","components/Box/index.tsx","components/Board/styles.ts","components/Board/index.tsx","container/Main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["styles","theme","root","flexGrow","menuButton","marginRight","spacing","title","useStyles","makeStyles","ButtonAppBar","classes","className","AppBar","position","Toolbar","Typography","variant","boxStyle","width","height","padding","display","justifyContent","alignItems","border","cursor","flex","rotate","transform","transitionDuration","props","handleClick","name","boxes","onClick","margin","useState","latest","setLatest","setBoxes","latestValue","newBoxes","Grid","container","direction","item","lg","sm","Button","fullWidth","color","Main","Container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be7c469e.chunk.js","sourcesContent":["import { Theme } from \"@material-ui/core\"\n\nconst styles = (theme: Theme) => ({\n        root: {\n          flexGrow: 1,\n        },\n        menuButton: {\n          marginRight: theme.spacing(2),\n        },\n        title: {\n          flexGrow: 1,\n        },\n})\n\nexport default styles","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport styles from './styles';\n\nconst useStyles = makeStyles(styles);\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Tic Tac Toe\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import { Theme } from \"@material-ui/core\"\n\nconst styles = (theme: Theme) => ({\n        boxStyle: {\n          width: theme.spacing(12),\n          height: theme.spacing(12),\n          padding: 8,\n          display: 'flex',\n          justifyContent: 'space-around',\n          alignItems: 'center',\n          border: '1px solid',\n          cursor: 'pointer',\n          flex: 1\n        },\n        rotate: {\n          transform: 'rotate(-180deg)',\n          transitionDuration: '0.8s'\n        }\n})\n\nexport default styles","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport { Typography } from '@material-ui/core';\n\ninterface Props {\n  name: number;\n  handleClick: (val: number) => void,\n  boxes: any[]\n}\n\nconst useStyles = makeStyles(styles);\n\nexport default function ButtonAppBar(props: Props) {\n  const classes = useStyles();\n  const {handleClick, name, boxes} = props\n\n  const onHandleClick = () => {\n    handleClick(name)\n  }\n\n  return (\n   <div className={classes.boxStyle} onClick={onHandleClick}>\n     <Typography variant=\"h2\" className={boxes[name] && classes.rotate}>{boxes[name]}</Typography>\n   </div>\n  );\n}","import { Theme } from \"@material-ui/core\"\n\nconst styles = (theme: Theme) => ({\n        root: {\n          flexGrow: 1,\n          margin: theme.spacing(3, 0, 3, 0)\n        }\n})\n\nexport default styles","import React, {useState} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '../Box';\nimport { Button, makeStyles, Typography } from '@material-ui/core';\nimport styles from './styles';\n\ninterface Props {\n}\n\nconst useStyles = makeStyles(styles);\n\nexport default function ButtonAppBar(props: Props) {\n  const [latest, setLatest] = useState<boolean>(true)\n  const [boxes, setBoxes] = useState<string[]>([])\n  const classes = useStyles()\n\n  const handleClick = (name: number) => {\n    const latestValue = latest ? 'X' : 'O'\n    const newBoxes: string[] = [...boxes]\n    newBoxes[name] = latestValue\n    setBoxes(newBoxes)\n    setLatest(!latest)\n  }\n\n  const resetGame = () => {\n    setBoxes([])\n  }\n\n  return (\n  <>\n   <Grid container direction=\"column\" className={classes.root}>\n     <Grid item container direction=\"row\" lg={5} sm={12}>\n       <Box boxes={boxes} name={1} handleClick={handleClick}/><Box boxes={boxes} name={2} handleClick={handleClick}/><Box boxes={boxes} name={3} handleClick={handleClick}/>\n     </Grid>\n     <Grid item container direction=\"row\" lg={5} sm={12}>\n     <Box boxes={boxes} name={4} handleClick={handleClick}/><Box boxes={boxes} name={5} handleClick={handleClick}/><Box boxes={boxes} name={6} handleClick={handleClick}/>\n     </Grid>\n     <Grid item container direction=\"row\" lg={5} sm={12}>\n     <Box boxes={boxes} name={7} handleClick={handleClick}/><Box boxes={boxes} name={8} handleClick={handleClick}/><Box boxes={boxes} name={9} handleClick={handleClick}/>\n     </Grid>\n   </Grid>\n   <Typography> Player: {latest ? 'X' : 'O'} </Typography>\n   <Grid container lg={2} sm={12}>\n    <Button fullWidth color=\"primary\" variant=\"contained\" onClick={resetGame}> Reset Game </Button>\n   </Grid>\n   </>\n  );\n}","import { Container } from '@material-ui/core'\nimport React from 'react'\nimport Header from '../components/Header'\nimport Board from '../components/Board'\n\nconst Main = () => {\n    return (\n        <>\n        <Header />\n        <Container>\n            <Board />\n        </Container>\n        </>\n    )\n}\n\nexport default Main\n","import React from 'react';\nimport Main from './container/Main'\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}